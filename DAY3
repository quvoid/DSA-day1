DAY 3

a loop inside a loop is called nested loop

for every problem there will be three type of solution : brute force , better and optimal 
most of the brute solution will get using 2 loops and most of the solution will be solved using 2 loops 

NESTED LOOP

class Main {
  public static void main(STring[] args){
    for(int i = 1; i<=5;i++){
      for(int j = 1; j <=5; j++){
        a++;
      }
    }
  }

PARELLEL PRINTING 

step 1 : Print number of ROWS
step 2 :                 COLUMNS
step 3 : print what to print and what not to print 

class Main {
  public static void main(STring[] args){
    for(int i = 1; i<=5;i++){
      for(int j = 1; j <=5; j++){
        System.out.println("*");
      }
      System.out.println();
    }
  }
------------------------------------------------------------------------------
public class Main{
     static boolean getprime(int n,int count){
          
          for(int i=1;i<=n;i++){
               if(n%i == 0){
                    count ++;
               }
               
          }
          if(count > 2){
               return false;
          }
          else{
               return true;
          }
     }
     public static void main(String[] args){
          int counter = 0;
          int number = 9;
          if(getprime(number,counter)){
               System.out.print("The number is prime");
          }
          else{
               System.out.println("The number is not prime");
          }
     }
}
------------------------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;
public class Main {
     public static void main(String[] args){
          Scanner sc = new Scanner(System.in);
          int correctPin = 1234;
          int userPin;
          do{
               System.out.print("Enter your pin : ");
               userPin = sc.nextInt();
               if(userPin != correctPin){
                    System.out.println("Incorrect pin, try again");
               }
               
          }while(userPin != correctPin);
          System.out.print("PIN vErified");
          sc.close();
     }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;
public class Main{
     public static void main(String[] args){
          Scanner sc = new Scanner(System.in);
          int choice;
          do{
               System.out.print("\n1.check Balance");
               System.out.print("2.Withdraw Money");
               System.out.print("3.Deposit Money");
               System.out.print("4.Exit");
               System.out.print("Choose an option : ");
               choice = sc.nextInt();
               
               switch(choice){
                    case 1 ->System.out.println("Balance : $50000");
                    case 2 ->System.out.println("Withdraw succesfull");
                    case 3 ->System.out.println("Deposit succesfull");
                    case 4 ->System.out.println("Exiting...");
                    default -> System.out.println("Invalid options");
               }
          }while(choice != 4);
     } 
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public class ArmstrongNumber {

    public static boolean isArmstrong(int number) {
        int originalNumber = number;
        int sum = 0;
        int numberOfDigits = 0;
        
        
        int temp = number;
        while (temp != 0) {
            temp = temp / 10;
            numberOfDigits++;
        }
        
        // Step 2: Calculate the sum of nth powers
        temp = number;  // Reset temp to original number
        while (temp != 0) {
            int digit = temp % 10;
            sum += Math.pow(digit, numberOfDigits);
            temp = temp / 10;
        }
        
        return sum == originalNumber;
    }

    public static void main(String[] args) {
        int num = 153;
        if (isArmstrong(num)) {
            System.out.println(num + " is an Armstrong number.");
        } else {
            System.out.println(num + " is not an Armstrong number.");
        }
    }
}
